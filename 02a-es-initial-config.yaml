apiVersion: eventstreams.ibm.com/v1beta2
kind: KafkaTopic
metadata:
  name: cp4i-ivt-topic
  labels:
    eventstreams.ibm.com/cluster: es-demo
spec:
  partitions: 1
  replicas: 3
  config:
    retention.ms: '86400000'
---
apiVersion: eventstreams.ibm.com/v1beta2
kind: KafkaTopic
metadata:
  name: cp4i-es-demo-topic
  labels:
    eventstreams.ibm.com/cluster: es-demo
spec:
  partitions: 1
  replicas: 3
  config:
    retention.ms: '86400000'
---
apiVersion: eventstreams.ibm.com/v1beta2
kind: KafkaTopic
metadata:
  name: cp4i-mq-2-es-demo-topic
  labels:
    eventstreams.ibm.com/cluster: es-demo
spec:
  partitions: 1
  replicas: 3
  config:
    retention.ms: '86400000'
---
apiVersion: eventstreams.ibm.com/v1beta2
kind: KafkaTopic
metadata:
  name: cp4i-es-2-mq-demo-topic
  labels:
    eventstreams.ibm.com/cluster: es-demo
spec:
  partitions: 1
  replicas: 3
  config:
    retention.ms: '86400000'
---
apiVersion: eventstreams.ibm.com/v1beta2
kind: KafkaTopic
metadata:
  name: fake-orders
  labels:
    eventstreams.ibm.com/cluster: es-demo
spec:
  config:
    min.insync.replicas: '1'
    retention.bytes: '524288000'
  partitions: 3
  replicas: 3
  topicName: ORDERS.NEW
---
apiVersion: eventstreams.ibm.com/v1beta2
kind: KafkaTopic
metadata:
  name: fake-cancellations
  labels:
    eventstreams.ibm.com/cluster: es-demo
spec:
  config:
    min.insync.replicas: '1'
    retention.bytes: '524288000'
  partitions: 3
  replicas: 3
  topicName: CANCELLATIONS
---
apiVersion: eventstreams.ibm.com/v1beta2
kind: KafkaTopic
metadata:
  name: fake-badgeevents
  labels:
    eventstreams.ibm.com/cluster: es-demo
spec:
  config:
    min.insync.replicas: '1'
    retention.bytes: '524288000'
  partitions: 3
  replicas: 1
  topicName: DOOR.BADGEIN
---
apiVersion: eventstreams.ibm.com/v1beta2
kind: KafkaTopic
metadata:
  name: fake-stockmovement
  labels:
    eventstreams.ibm.com/cluster: es-demo
spec:
  config:
    min.insync.replicas: '1'
    retention.bytes: '524288000'
  partitions: 3
  replicas: 1
  topicName: STOCK.MOVEMENT
---
apiVersion: eventstreams.ibm.com/v1beta2
kind: KafkaTopic
metadata:
  name: fake-customers
  labels:
    eventstreams.ibm.com/cluster: es-demo
spec:
  config:
    min.insync.replicas: '1'
    retention.bytes: '524288000'
  partitions: 3
  replicas: 3
  topicName: CUSTOMERS.NEW
---
apiVersion: eventstreams.ibm.com/v1beta2
kind: KafkaTopic
metadata:
  name: fake-sensorreadings
  labels:
    eventstreams.ibm.com/cluster: es-demo
spec:
  config:
    min.insync.replicas: '1'
    retention.bytes: '524288000'
  partitions: 3
  replicas: 1
  topicName: SENSOR.READINGS
---
apiVersion: eventstreams.ibm.com/v1beta2
kind: KafkaTopic
metadata:
  name: fake-orders-avro
  labels:
    eventstreams.ibm.com/cluster: es-demo
spec:
  config:
    min.insync.replicas: '1'
    retention.bytes: '50000000'
  partitions: 3
  replicas: 1
  topicName: ORDERS.NEW.AVRO
---
apiVersion: eventstreams.ibm.com/v1beta2
kind: KafkaTopic
metadata:
  name: fake-cancellations-avro
  labels:
    eventstreams.ibm.com/cluster: es-demo
spec:
  config:
    min.insync.replicas: '1'
    retention.bytes: '50000000'
  partitions: 3
  replicas: 1
  topicName: CANCELLATIONS.AVRO
---
apiVersion: eventstreams.ibm.com/v1beta2
kind: KafkaTopic
metadata:
  name: fake-badgeevents-avro
  labels:
    eventstreams.ibm.com/cluster: es-demo
spec:
  config:
    min.insync.replicas: '1'
    retention.bytes: '50000000'
  partitions: 3
  replicas: 1
  topicName: DOOR.BADGEIN.AVRO
---
apiVersion: eventstreams.ibm.com/v1beta2
kind: KafkaTopic
metadata:
  name: fake-stockmovement-avro
  labels:
    eventstreams.ibm.com/cluster: es-demo
spec:
  config:
    min.insync.replicas: '1'
    retention.bytes: '50000000'
  partitions: 3
  replicas: 1
  topicName: STOCK.MOVEMENT.AVRO
---
apiVersion: eventstreams.ibm.com/v1beta2
kind: KafkaTopic
metadata:
  name: fake-customers-avro
  labels:
    eventstreams.ibm.com/cluster: es-demo
spec:
  config:
    min.insync.replicas: '1'
    retention.bytes: '50000000'
  partitions: 3
  replicas: 1
  topicName: CUSTOMERS.NEW.AVRO
---
apiVersion: eventstreams.ibm.com/v1beta2
kind: KafkaTopic
metadata:
  name: fake-sensorreadings-avro
  labels:
    eventstreams.ibm.com/cluster: es-demo
spec:
  config:
    min.insync.replicas: '1'
    retention.bytes: '50000000'
  partitions: 3
  replicas: 1
  topicName: SENSOR.READINGS.AVRO
---
apiVersion: eventstreams.ibm.com/v1beta2
kind: KafkaTopic
metadata:
  name: apic-analytics-offload-topic
  labels:
    eventstreams.ibm.com/cluster: es-demo
spec:
  partitions: 1
  replicas: 3
  config:
    retention.ms: '86400000'
---
apiVersion: eventstreams.ibm.com/v1beta2
kind: KafkaUser
metadata:
  labels:
    app.kubernetes.io/instance: es-demo
    eventstreams.ibm.com/cluster: es-demo
  name: es-admin
spec:
  authentication:
    type: scram-sha-512
  authorization:
    acls:
      - operations:
          - Alter
          - DescribeConfigs
        resource:
          type: cluster
      - operations:
          - Create
          - Read
          - Write
          - Delete
          - DescribeConfigs
          - Alter
          - AlterConfigs
        resource:
          name: '*'
          patternType: literal
          type: topic
      - operations:
          - Alter
          - Read
        resource:
          name: __schema_
          patternType: prefix
          type: topic
      - operations:
          - Read
          - Delete
        resource:
          name: '*'
          patternType: literal
          type: group
    type: simple
---
apiVersion: eventstreams.ibm.com/v1beta2
kind: KafkaUser
metadata:
  labels:
    app.kubernetes.io/instance: es-demo
    eventstreams.ibm.com/cluster: es-demo
  name: ace-user
spec:
  authentication:
    type: scram-sha-512
  authorization:
    acls:
      - host: '*'
        operations:
          - Read
          - Write
          - Create
        resource:
          name: '*'
          patternType: literal
          type: topic
      - host: '*'
        operations:
          - Read
          - Alter
        resource:
          name: __schema_
          patternType: prefix
          type: topic
      - host: '*'
        operations:
          - Read
        resource:
          name: '*'
          patternType: literal
          type: group
      - host: '*'
        operations:
          - Write
        resource:
          name: '*'
          patternType: literal
          type: transactionalId
    type: simple
---
apiVersion: eventstreams.ibm.com/v1beta2
kind: KafkaUser
metadata:
  labels:
    app.kubernetes.io/instance: es-demo
    eventstreams.ibm.com/cluster: es-demo
  name: kafka-connect-user
spec:
  authentication:
    type: scram-sha-512
  authorization:
    acls:
      - host: '*'
        operations:
          - Read
          - Write
          - Create
        resource:
          name: '*'
          patternType: literal
          type: topic
      - host: '*'
        operations:
          - Read
          - Alter
        resource:
          name: __schema_
          patternType: prefix
          type: topic
      - host: '*'
        operations:
          - Read
        resource:
          name: '*'
          patternType: literal
          type: group
      - host: '*'
        operations:
          - Write
        resource:
          name: '*'
          patternType: literal
          type: transactionalId
    type: simple
---
apiVersion: eventstreams.ibm.com/v1beta2
kind: KafkaUser
metadata:
  labels:
    app.kubernetes.io/instance: es-demo
    eventstreams.ibm.com/cluster: es-demo
  name: kafka-bridge-user
spec:
  authentication:
    type: scram-sha-512
  authorization:
    acls:
      - host: '*'
        operations:
          - Read
          - Write
          - Create
        resource:
          name: '*'
          patternType: literal
          type: topic
      - host: '*'
        operations:
          - Read
          - Alter
        resource:
          name: __schema_
          patternType: prefix
          type: topic
      - host: '*'
        operations:
          - Read
        resource:
          name: '*'
          patternType: literal
          type: group
      - host: '*'
        operations:
          - Write
        resource:
          name: '*'
          patternType: literal
          type: transactionalId
    type: simple
---
apiVersion: eventstreams.ibm.com/v1beta2
kind: KafkaUser
metadata:
  labels:
    app.kubernetes.io/instance: es-demo
    eventstreams.ibm.com/cluster: es-demo
  name: eem-user
spec:
  authentication:
    type: scram-sha-512
  authorization:
    acls:
      - host: '*'
        operations:
          - Read
          - Write
          - Create
        resource:
          name: '*'
          patternType: literal
          type: topic
      - host: '*'
        operations:
          - Read
          - Alter
        resource:
          name: __schema_
          patternType: prefix
          type: topic
      - host: '*'
        operations:
          - Read
        resource:
          name: '*'
          patternType: literal
          type: group
      - host: '*'
        operations:
          - Write
        resource:
          name: '*'
          patternType: literal
          type: transactionalId
    type: simple
---
apiVersion: eventstreams.ibm.com/v1beta2
kind: KafkaUser
metadata:
  labels:
    app.kubernetes.io/instance: es-demo
    eventstreams.ibm.com/cluster: es-demo
  name: ep-user
spec:
  authentication:
    type: scram-sha-512
  authorization:
    acls:
      - host: '*'
        operations:
          - Read
          - Write
          - Create
        resource:
          name: '*'
          patternType: literal
          type: topic
      - host: '*'
        operations:
          - Read
          - Alter
        resource:
          name: __schema_
          patternType: prefix
          type: topic
      - host: '*'
        operations:
          - Read
        resource:
          name: '*'
          patternType: literal
          type: group
      - host: '*'
        operations:
          - Write
        resource:
          name: '*'
          patternType: literal
          type: transactionalId
    type: simple
---
apiVersion: eventstreams.ibm.com/v1beta2
kind: KafkaUser
metadata:
  labels:
    app.kubernetes.io/instance: es-demo
    eventstreams.ibm.com/cluster: es-demo
  name: apic-analytics-offload-user
spec:
  authentication:
    type: scram-sha-512
  authorization:
    acls:
      - host: '*'
        operations:
          - Read
          - Write
          - Create
        resource:
          name: '*'
          patternType: literal
          type: topic
      - host: '*'
        operations:
          - Read
          - Alter
        resource:
          name: __schema_
          patternType: prefix
          type: topic
      - host: '*'
        operations:
          - Read
        resource:
          name: '*'
          patternType: literal
          type: group
      - host: '*'
        operations:
          - Write
        resource:
          name: '*'
          patternType: literal
          type: transactionalId
    type: simple
